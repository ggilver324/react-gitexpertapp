{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGrigItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGrigItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCPfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,4DAE+CC,UAAWH,GAF1D,sDAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCXO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCDJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECNwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEPxB,EAAUC,GACGwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAK9B,CAAEpB,IAEEqB,EDf0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAKrB,OAHAO,QAAQC,IAAKR,GAIT,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OACEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SACI,6BAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEUA,GADCA,EAAIC,eEnB7BkB,EAAe,WAExB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADNA,Y,MCXlC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0e1bbe87.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value);\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        \r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n        \r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};","\r\n    export const getGifs = async( category ) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/trending?limit=10&q=${ encodeURI( category ) }&api_key=TpbsxrojXjxOpNx5X9VZCGjHXxmxB5EP`;\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n        \r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n     \r\n    }","import React from 'react'\r\n\r\nexport const GifGrigItem = ( { title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGrigItem } from './GifGrigItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    console.log( loading );\r\n    // ` `\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"animate__animated animate__fadeIn\"> { category } </h1>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                <ul>\r\n                    {\r\n                        images.map( img => (\r\n                           <GifGrigItem\r\n                                key={ img.id }\r\n                                { ...img }\r\n                                />\r\n                                \r\n                        ))\r\n\r\n                    }\r\n                </ul>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// images.map( img => {\r\n//     <GifGrigItem\r\n//         key={ img.id }\r\n//         { ...img }\r\n//         //img={ img }\r\n//     />\r\n    \r\n// })\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs ( category )\r\n                    .then( imgs => {\r\n     \r\n                        setState({\r\n                            data: imgs,\r\n                            loading: false \r\n                        });\r\n                             \r\n                    })\r\n\r\n    }, [ category ])\r\n\r\n    return state;\r\n\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['one Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr/>\r\n            <ul>\r\n                {\r\n                    categories.map( category =>(\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category ={ category } />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}